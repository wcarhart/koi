#!/bin/bash
set -e

: <<- COMMENT
To use koi:
  1. source the koi script
  2. override the 'koiname' variable with the name of your script
  3. override the 'koidescription' variable with the description of your script

To add arguments:
  1. add arguments to each function with __addarg
  2. parse the arguments with __parseargs "$@"

To run the script, use the __koirun function at the very end of the script:
  __koirun "$@"
COMMENT

source koi
koiname=koi_template
koidescription="Helpful template to demonstrate what argument options are available with koi"

# if you don't want colors, uncomment the line below
# koicolors=0

# Here's a function that showcases the different options available with koi
# NOTE: this function will cause errors when actually run due to ambiguity, it is only for demo purposes
function myfunction {
	# help
	__addarg "-h" "--help" "help" "optional" "" "A helpful documentation message about myfunction"

	# storing values
	__addarg "-a" "--aaa" "storevalue" "required" "" "A required argument"
	__addarg "-b" "--bbb" "storevalue" "optional" "" "An optional argument"
	__addarg "-c" "--ccc" "storevalue" "optional" "default value" "An optional argument with a default value"

	# store arrays
	__addarg "-d" "--ddd" "storearray" "required" "" "An array where at least one value is required"
	__addarg "-e" "--eee" "storearray" "optional" "" "An optional array"

	# positional values
	__addarg "-f" "--fff" "positionalvalue" "required" "" "A required positional value"
	__addarg "-g" "--ggg" "positionalvalue" "optional" "" "An optional positional value"

	# positional array
	__addarg "-i" "--iii" "positionalarray" "required" "" "A required positional array"
	__addarg "-j" "--jjj" "positionalarray" "optional" "" "An optional positional array"

	# paths to files
	__addarg "-l" "--lll" "filepath" "required" "" "A required path to a file"
	__addarg "-m" "--mmm" "filepath" "optional" "" "An optional path to a file"
	__addarg "-n" "--nnn" "filepath" "optional" "/path/to/default.txt" "An optional path to file with a default value"

	# paths to directories
	__addarg "-o" "--ooo" "directorypath" "required" "" "A required path to a directory"
	__addarg "-p" "--ppp" "directorypath" "optional" "" "An optional path to a directory"
	__addarg "-q" "--qqq" "directorypath" "optional" "/path/to/defaultdir" "An optional path to directory with a default value"

	# flags
	__addarg "-r" "--rrr" "flag" "required" "" "A required flag, which will store 1 if present"
	__addarg "-s" "--sss" "flag" "optional" "" "An optional flag, which will store 1 if present if included"

	# exit
	__addarg "-t" "--ttt" "exit" "required" "" "A required exit, which will exit"
	__addarg "-u" "--uuu" "exit" "optional" "" "An optional exit, which will exit if included"

	# you need to call __parseargs for arguments to be parsed!
	__parseargs "$@"

	# how to use the arguments you've defined
	echo "storevalue, required: $aaa"
	echo "storeavlue, optional: $bbb"
	echo "storevalue, optional with default value: $ccc"

	echo "storearray, required: ${ddd[@]}"
	echo "storearray, optional: ${eee[@]}"

	echo "positionalvalue, required: $fff"
	echo "positionalvalue, optional: $ggg"

	echo "positionalarray, required: $iii"
	echo "positionalarray, optional: $jjj"

	echo "filepath, required: $lll"
	echo "filepath, optional: $mmm"
	echo "filepath: optional with default value: $nnn"

	echo "directorypath, required: $ooo"
	echo "directorypath, optional: $ppp"
	echo "directorypath, optional with default value: $qqq"

	echo "flag, required: $rrr"
	echo "flag, optional: $sss"
}

__koirun "$@"